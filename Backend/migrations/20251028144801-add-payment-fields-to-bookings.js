'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    // 1. Add paymentOrderId (Unique ID generated by your backend)
    await queryInterface.addColumn('client_bookings', 'paymentOrderId', {
      type: Sequelize.STRING(100),
      allowNull: true,
      unique: true, // Crucial for idempotency
    });

    // 2. Add paymentSessionId (Token from Cashfree)
    await queryInterface.addColumn('client_bookings', 'paymentSessionId', {
      type: Sequelize.STRING(255),
      allowNull: true,
    });

    // 3. Update the 'status' ENUM to include payment states
    // NOTE: In many databases (like PostgreSQL), you must redefine the ENUM type.
    // For simpler dialects (like SQLite or MySQL), a MODIFY COLUMN might suffice.
    // This example uses a safer, dialect-agnostic approach by modifying the column type.

    // Get the current list of ENUM values from your Booking model (plus the new ones)
    const newStatusValues = [
        'order_initiated', 
        'order_created', 
        'payment_success', 
        'payment_failed', 
        'confirmed', 
        'pending', 
        'cancelled', 
        'completed'
    ];

    await queryInterface.changeColumn('client_bookings', 'status', {
      type: Sequelize.ENUM(...newStatusValues),
      defaultValue: 'order_initiated', // Set the new default
      allowNull: false
    });
  },

  down: async (queryInterface, Sequelize) => {
    // If you need to revert the changes (rollback migration)
    await queryInterface.removeColumn('client_bookings', 'paymentOrderId');
    await queryInterface.removeColumn('client_bookings', 'paymentSessionId');
    
    // Revert the status ENUM back to the original values if necessary
    // This is complex and often skipped in simple rollbacks, but proper rollback 
    // requires a similar changeColumn call back to the original ENUM list.
    const originalStatusValues = ['confirmed', 'pending', 'cancelled', 'completed'];
    await queryInterface.changeColumn('client_bookings', 'status', {
      type: Sequelize.ENUM(...originalStatusValues),
      defaultValue: 'pending',
      allowNull: false
    });
  }
};