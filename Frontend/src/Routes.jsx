// src/Routes.jsx
import React from "react";
import { Routes as RouterRoutes, Route, Outlet } from "react-router-dom";
import ScrollToTop from "components/ScrollToTop";
import ErrorBoundary from "components/ErrorBoundary";
import NotFound from "pages/NotFound";
import UserLogin from "./pages/user-login";
import EmailVerification from "./pages/email-verification";
import UserRegistration from "./pages/user-registration";
import PasswordResetPage from "./pages/password-reset";
import Homepage from "./pages/homepage";
import PrivateRoute from "./auth/PrivateRoute";
import Auth0Callback from "./auth/Auth0Callback";
import Unauthorized from "./pages/Unauthorized";

// REMOVED: import WelcomeSetup from "./pages/welcome-setup";

// âœ… Dashboard imports
import ClientDashboard from "./pages/dashboards/client-dashboard";
import CoachDashboard from "./pages/dashboards/coach-dashboard";
import AdminDashboard from "./pages/dashboards/admin-dashboard";
// âœ… CoachPublicProfile from the shared folder
import CoachPublicProfile from "./pages/dashboards/shared/coach-public-profile";

const Routes = () => {
Â  return (
Â  Â  <ErrorBoundary>
Â  Â  Â  <ScrollToTop />
Â  Â  Â  <RouterRoutes>
Â  Â  Â  Â  {/* Public Routes */}
Â  Â  Â  Â  <Route path="/" element={<Homepage />} />
Â  Â  Â  Â  <Route path="/login" element={<UserLogin />} />
Â  Â  Â  Â  <Route path="/register" element={<UserRegistration />} />
Â  Â  Â  Â  <Route path="/email-verification" element={<EmailVerification />} />
Â  Â  Â  Â  
Â  Â  Â  Â  {/* âœ… Password Reset Routes */}
Â  Â  Â  Â  <Route path="/password-reset" element={<PasswordResetPage />} />
Â  Â  Â  Â  <Route path="/password-reset/:token" element={<PasswordResetPage />} />
Â  Â  Â  Â  
Â  Â  Â  Â  <Route path="/auth0-callback" element={<Auth0Callback />} />
Â  Â  Â  Â  <Route path="/unauthorized" element={<Unauthorized />} />

Â  Â  Â  Â  {/* âœ… ADDED PUBLIC ROUTE: Coach Public Profile */}
Â  Â  Â  Â  <Route path="/profiles/:id" element={<CoachPublicProfile />} />

Â  Â  Â  Â  {/* ðŸ”‘ REMOVED: Onboarding route for WelcomeSetup page */}

Â  Â  Â  Â  {/* âœ… Protected Dashboard Routes */}
Â  Â  Â  Â  <Route
Â  Â  Â  Â  Â  path="/dashboard"
Â  Â  Â  Â  Â  element={
Â  Â  Â  Â  Â  Â  <PrivateRoute allowedRoles={["client", "coach", "admin"]}>
Â  Â  Â  Â  Â  Â  Â  <Outlet />
Â  Â  Â  Â  Â  Â  </PrivateRoute>
Â  Â  Â  Â  Â  }
Â  Â  Â  Â  >
            {/* Client Dashboard Routes - FIX: Use wildcard to capture all tabs */}
Â  Â  Â  Â  Â    <Route path="client" element={<ClientDashboard />} />
Â  Â  Â  Â  Â    <Route path="client/*" element={<ClientDashboard />} /> {/* <-- FIX */}

            {/* Coach Dashboard Routes - FIX: Use wildcard to capture all tabs */}
Â  Â  Â  Â  Â    <Route path="coach" element={<CoachDashboard />} />
Â  Â  Â  Â  Â    <Route path="coach/*" element={<CoachDashboard />} /> {/* <-- FIX */}

            {/* Admin Dashboard Routes - FIX: Use wildcard to capture all tabs */}
Â  Â  Â  Â  Â    <Route path="admin" element={<AdminDashboard />} />
            <Route path="admin/*" element={<AdminDashboard />} /> {/* <-- FIX */}
Â  Â  Â  Â  </Route>

Â  Â  Â  Â  {/* Catch-all route */}
Â  Â  Â  Â  <Route path="*" element={<NotFound />} />
Â  Â  Â  </RouterRoutes>
Â  Â  </ErrorBoundary>
Â  );
};

export default Routes;