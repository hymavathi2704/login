import React, { useState } from 'react';
import Icon from '@/components/AppIcon';
import Button from '@/components/ui/Button';
import { Clock, Tag, DollarSign, TrendingUp, ArrowRight, CheckCircle } from 'lucide-react';
import { useAuth } from '@/auth/AuthContext'; 
import { bookSession } from '@/auth/authApi';
import { toast } from 'sonner';

// ðŸš¨ MODIFIED: Added onSessionBooked prop
const ServicesSection = ({ coach, onSessionBooked }) => {
Â  // We keep useAuth to access roles and data, but won't block the button based on it
Â  const { isAuthenticated, roles, user } = useAuth(); 
Â  const [bookingSessionId, setBookingSessionId] = useState(null); 

Â  const formatPrice = (price) => {
Â  Â  const p = parseFloat(price);
Â  Â  if (p === 0) return 'FREE';
Â  Â  return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(p);
Â  };

Â  const formatDuration = (minutes) => {
Â  Â  const m = parseInt(minutes, 10);
Â  Â  if (m < 60) return `${m} min`;
Â  Â  const hours = Math.floor(m / 60);
Â  Â  const remaining = m % 60;
Â  Â  return remaining > 0 ? `${hours}h ${remaining}m` : `${hours}h`;
Â  };

  // Added isBooked argument
Â  const getButtonConfig = (sessionType, isBooked) => {
    // Logic for already booked session
    if (isBooked) {
        return { 
            label: 'Purchased / Booked', 
            icon: 'CheckCircle', 
            variant: 'success', 
            disabled: true, 
            className: 'opacity-80 cursor-default'
        };
    }
    
    // Original logic for unbooked sessions
Â  Â  if (!sessionType) return { label: 'Purchase/Book', icon: 'ArrowRight', variant: 'default', disabled: false, className: '' };
Â  Â  const type = sessionType.toLowerCase();
Â  Â  if (type.includes('subscription') || type.includes('package')) {
Â  Â  Â  return { label: 'Subscribe Now', icon: 'TrendingUp', variant: 'success', disabled: false, className: '' };
Â  Â  }
Â  Â  return { label: 'Purchase/Book', icon: 'ArrowRight', variant: 'default', disabled: false, className: '' };
Â  };

Â  const handleBookSession = async (sessionId, sessionTitle) => {
Â  Â  
Â  Â  if (!window.confirm(`Confirm booking for: ${sessionTitle}?`)) return;

Â  Â  setBookingSessionId(sessionId); 

Â  Â  try {
Â  Â  Â  await bookSession(sessionId);
Â  Â  Â  toast.success(`Successfully booked: ${sessionTitle}! View it in My Sessions.`);
        
      // ðŸš¨ NEW: Call the callback function to tell the parent component to refresh data
      if (onSessionBooked) {
          onSessionBooked();
      }

Â  Â  } catch (err) {
Â  Â  Â  console.error("Booking Error:", err);
Â  Â  Â  const errorMsg = err.response?.data?.error || err.message || 'Booking failed due to server error.';
Â  Â  Â  toast.error(errorMsg);
Â  Â  } finally {
Â  Â  Â  setBookingSessionId(null);
Â  Â  }
Â  };

Â  const availableSessions = Array.isArray(coach?.availableSessions) ? coach.availableSessions : [];

Â  return (
Â  Â  <div className="bg-card rounded-card p-6 shadow-soft">
Â  Â  Â  <h2 className="text-2xl font-heading font-semibold text-foreground mb-6">
Â  Â  Â  Â  Digital Services Offered
Â  Â  Â  </h2>

Â  Â  Â  <div className="space-y-4">
Â  Â  Â  Â  {availableSessions.length > 0 ? (
Â  Â  Â  Â  Â  availableSessions.map((session) => {
            const isBooked = session?.isBooked;

            // MODIFIED: Pass isBooked
Â  Â  Â  Â  Â  Â  const { label, icon, variant, disabled: configDisabled, className: configClassName } = getButtonConfig(session?.type, isBooked);
Â  Â  Â  Â  Â  Â  const isLoading = bookingSessionId === session?.id;
            
            const isDisabled = isLoading || configDisabled;

Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  key={session?.id}
Â  Â  Â  Â  Â  Â  Â  Â  className="border border-border rounded-card p-4 hover:shadow-soft transition-smooth"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-start justify-between mb-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex-1 pr-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="font-semibold text-foreground mb-1">{session?.title}</h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-muted-foreground text-sm mb-2">{session?.description}</p>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-right flex-shrink-0">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-xl font-bold text-primary">{formatPrice(session?.price)}</div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="text-sm text-muted-foreground">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {session?.price > 0 ? 'per session' : 'free offer'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-between pt-3 border-t border-dashed border-border">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-4 text-sm text-muted-foreground">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Clock size={14} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>{formatDuration(session?.duration)}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Tag size={14} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="capitalize">{session?.type || 'Individual'}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  variant={variant}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  size="sm"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleBookSession(session?.id, session?.title)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  iconName={icon}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  iconPosition="right"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  loading={isLoading} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={isDisabled} 
                    className={configClassName}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {isLoading ? 'Processing...' : label}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  })
Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  <div className="text-center py-12">
Â  Â  Â  Â  Â  Â  <Icon name="DollarSign" size={48} className="text-muted-foreground mx-auto mb-4" />
Â  Â  Â  Â  Â  Â  <p className="text-muted-foreground">
Â  Â  Â  Â  Â  Â  Â  This coach has not yet listed any digital services.
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default ServicesSection;